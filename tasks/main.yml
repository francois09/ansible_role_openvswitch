---
# Install the package
- name: Install OpenVSwitch package
  apt:
    name:
      - openvswitch-switch
      - openvswitch-common
  when:
    - ovs__install

- name: Create OVS bridge
  openvswitch_bridge:
    bridge: "{{ ovs__bridge }}"
    state: present
  when:
    - ovs__install
    - ovs__configure

- name: Find if peer number is 0
  set_fact:
    peer_num: 0
  when:
    - ovs__install
    - ovs__configure
    - ovs__gre is defined
    - ovs__gre.peers[0].host == inventory_hostname

- name: Find if peer number is 1
  set_fact:
    peer_num: 1
  when:
    - ovs__install
    - ovs__configure
    - ovs__gre is defined
    - ovs__gre.peers[1].host == inventory_hostname

- name: Connect peers
  shell: ovs-vsctl --may-exist add-port "{{ ovs__bridge }}" "{{ ovs__gre.iface }}" -- set interface "{{ ovs__gre.iface }}" type=gre options:remote_ip="{{ ovs__gre.peers[1-peer_num].ip }}"
  when:
    - ovs__install
    - ovs__configure
    - ovs__gre is defined

- name: Create gateway interface
  shell: ovs-vsctl --may-exist add-port "{{ ovs__bridge }}" "{{ ovs__gateway }}" -- set interface "{{ ovs__gateway }}" type=internal
  when:
    - ovs__install
    - ovs__configure
    - ovs__gre is defined

- name: Up gateway interface
  shell: ip link set "{{ ovs__gateway }}" up
  when:
    - ovs__install
    - ovs__configure
    - ovs__gre is defined

- name: Assign ip to GW
  shell: ip a a "{{ ovs__gre.peers[peer_num].gw }}/{{ ovs__gre.netbits }}" dev "{{ ovs__gateway }}"
  when:
    - ovs__install
    - ovs__configure
    - ovs__gre is defined
    - ovs__gre.peers[peer_num].host == inventory_hostname
    - ovs__gre.peers[peer_num].gw not in hostvars[inventory_hostname]['ansible_all_ipv4_addresses']

- name: Make iface config persistant
  template:
    src: iface_defs
    dest: "/etc/network/interfaces.d/iface-{{ ovs__gateway }}"
    owner: root
    group: root
    mode: 0644
  when:
    - ovs__install
    - ovs__configure
    - ovs__gre is defined
    - ovs__gre.peers[peer_num].host == inventory_hostname
